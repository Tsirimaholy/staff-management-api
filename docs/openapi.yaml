openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8080
paths:
  /staffs:
    get:
      tags:
      - Staff
      description: Get the list of all staff
      summary: Get the list of all staff
      operationId: getAll
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
    put:
      tags:
      - Staff
      operationId: saveAll
      summary: Create or update staff
      description: Create or update staff
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Staff'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Staff'
  /departments:
    get:
      tags:
      - Department
      operationId: getAll_2
      summary: Create or update a department
      description: Create or update a department
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
    put:
      tags:
      - Department
      operationId: create
      description: Get all departments
      summary: Get all departments
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Department'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Department'
  /staffs/{id}/vacations:
    get:
      tags:
      - Staff
      operationId: findByStaffId
      summary: get the list of vacations request for an identified staff
      description: Get vacations request for an identified staff
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: pageSize
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vacation'
    post:
      tags:
      - Staff
      operationId: requestVacation
      summary: add new staff
      description: add new staff
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vacation'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Vacation'
  /positions:
    get:
      tags:
      - Position
      description: get all positions
      summary: get all positions
      operationId: getAll_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'
    post:
      tags:
      - Position
      operationId: saveAll_1
      summary: Create new position
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Position'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Position'
  /staffs/{idStaff}/positions/to/{idPosition}:
    patch:
      tags:
      - Staff
      operationId: updatePosition
      description: change position for an identified staff
      summary: change position for an identified staff
      parameters:
      - name: idStaff
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: idPosition
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Staff'
  /vacations/today:
    get:
      tags:
      - Vacation
      summary: Get vacattions that was submitted today
      description: Get vacattions that was submitted today
      operationId: getTodayRequest
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Vacation'
  /staffs/{id}:
    delete:
      tags:
      - Staff
      description: delete a staff
      summary: delete a staff
      operationId: fire
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
components:
  schemas:
    Position:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Staff:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        birthDate:
          type: string
          format: date
        hiringDate:
          type: string
          format: date
        email:
          type: string
        phoneNumber:
          type: string
        salary:
          type: number
          format: double
        position:
          $ref: '#/components/schemas/Position'
    Department:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        positions:
          type: array
          items:
            $ref: '#/components/schemas/Position'
    Vacation:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        motif:
          type: string
        duration:
          type: integer
          format: int32
        staff:
          $ref: '#/components/schemas/Staff'
        submissionDate:
          type: string
          format: date-time
        approved:
          type: boolean
